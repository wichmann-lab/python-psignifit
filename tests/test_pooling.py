import numpy as np

from psignifit.tools import pool_blocks


def test_pooling_minimal_default():
    inp = np.array([
        [1., 0., 1.],
        [2., 0., 1.],
        [3., 0., 1.],
    ])
    # this should not be pooled at all
    act = pool_blocks(inp, max_tol=0, max_gap=10, max_length=10)
    exp = inp
    assert np.all(exp == act)


def test_pooling_minimal_max_tol():
    inp = np.array([
        [1., 0., 1.],
        [1.4, 0., 1.],
        [2., 0., 1.],
        [3., 0., 1.],
    ])
    act = pool_blocks(inp, max_tol=0.4, max_gap=10, max_length=10)
    exp = np.array([
        [1.2, 0., 2.],
        [2., 0., 1.],
        [3., 0., 1.],
    ])
    assert np.all(exp == act)


def test_pooling_minimal_gap():
    inp = np.array([
        [1., 0., 1.],
        [1.2, 0., 1.],
        [2., 0., 1.],
        [1.4, 0., 1.],
        [3., 0., 1.],
        [4., 0., 1.],
        [5., 0., 1.],
        [6., 0., 1.],
        [1., 0., 1.],
    ])
    act = pool_blocks(inp, max_tol=0.4, max_gap=2, max_length=10)
    exp = np.array([
        [1.2, 0., 3.],
        [2., 0., 1.],
        [3., 0., 1.],
        [4., 0., 1.],
        [5., 0., 1.],
        [6., 0., 1.],
        [1., 0., 1.],
    ])
    assert np.all(exp == act)


def test_pooling_minimal_length():
    inp = np.array([
        [1., 0., 1.],
        [1.4, 0., 1.],
        [2., 0., 1.],
        [1.4, 0., 1.],
        [3., 0., 1.],
        [4., 0., 1.],
        [5., 0., 1.],
        [6., 0., 1.],
        [1., 0., 1.],
    ])
    act = pool_blocks(inp, max_tol=0.4, max_gap=2, max_length=2)
    exp = np.array([
        [1.2, 0., 2.],
        [2., 0., 1.],
        [1.4, 0., 1.],
        [3., 0., 1.],
        [4., 0., 1.],
        [5., 0., 1.],
        [6., 0., 1.],
        [1., 0., 1.],
    ])
    assert np.all(exp == act)


# in all the following tests we check for closeness within 5 digits precision
# instead of equality. This is needed because the expected output arrays were
# taken from a dump of a matlab session using the matlab version of psignifit,
# and matlab truncates to 5 significant digits in the default output.


def test_pooling_big_default():
    exp = parms_default.pop('out')
    act = pool_blocks(data, **parms_default)
    assert np.allclose(exp, act, rtol=0, atol=1e-04)


def test_pooling_big_max_tol():
    exp = parms_max_tol.pop('out')
    act = pool_blocks(data, **parms_max_tol)
    assert np.allclose(exp, act, rtol=0, atol=1e-04)


def test_pooling_big_max_length():
    exp = parms_max_length.pop('out')
    act = pool_blocks(data, **parms_max_length)
    assert np.allclose(exp, act, rtol=0, atol=1e-04)


def test_pooling_big_max_gap():
    exp = parms_max_gap.pop('out')
    act = pool_blocks(data, **parms_max_gap)
    assert np.allclose(exp, act, rtol=0, atol=1e-04)


def test_pooling_243():
    # Reproduces issue #243

    data = np.array([
        [100, 50, 50],
        [101, 51, 51],
        [200, 60, 60],
        [201, 61, 61],
        [300, 70, 70],
        [301, 71, 71],
        [400, 80, 80]
    ])

    # Crashes with:
    # TypeError: cannot unpack non-iterable numpy.float64 object
    pooled = pool_blocks(data, max_tol=50, max_gap=50, max_length=10)
    assert np.allclose(pooled, data)


data = np.array([
    [1.3262, 1, 1],
    [0.8534, 1, 1],
    [0.4717, 0, 1],
    [1.3091, 1, 1],
    [1.0467, 1, 1],
    [0.8816, 1, 1],
    [0.7765, 0, 1],
    [1.0535, 0, 1],
    [1.6860, 1, 1],
    [1.3763, 1, 1],
    [1.2443, 1, 1],
    [1.1757, 1, 1],
    [1.1286, 1, 1],
    [1.0922, 1, 1],
    [1.0623, 1, 1],
    [1.0367, 0, 1],
    [1.1065, 1, 1],
    [1.0838, 1, 1],
    [1.0651, 1, 1],
    [1.0490, 1, 1],
    [1.0352, 0, 1],
    [1.0739, 1, 1],
    [1.0603, 0, 1],
    [1.0964, 1, 1],
    [1.0826, 1, 1],
    [1.0708, 1, 1],
    [1.0606, 1, 1],
    [1.0515, 1, 1],
    [1.0434, 0, 1],
    [1.0649, 1, 1],
    [1.0567, 1, 1],
    [1.0492, 1, 1],
    [1.0424, 1, 1],
    [1.0362, 1, 1],
    [1.0303, 1, 1],
    [1.0249, 1, 1],
    [1.0197, 1, 1],
    [1.0150, 0, 1],
    [1.0288, 1, 1],
    [1.0240, 1, 1],
    [1.0194, 1, 1],
    [1.0151, 1, 1],
    [1.0109, 0, 1],
    [1.0222, 1, 1],
    [1.0181, 1, 1],
    [1.0142, 1, 1],
    [1.0104, 1, 1],
    [1.0069, 0, 1],
    [1.0170, 0, 1],
    [1.0275, 0, 1],
    [1.0386, 0, 1],
    [1.0503, 1, 1],
    [1.0461, 1, 1],
    [1.0420, 0, 1],
    [1.0529, 1, 1],
    [1.0488, 0, 1],
    [1.0601, 1, 1],
    [1.0560, 0, 1],
    [1.0679, 1, 1],
    [1.0636, 1, 1],
    [1.0595, 1, 1],
    [1.0557, 1, 1],
    [1.0521, 0, 1],
    [1.0618, 0, 1],
    [1.0722, 0, 1],
    [1.0836, 1, 1],
    [1.0792, 1, 1],
    [1.0752, 1, 1],
    [1.0713, 0, 1],
    [1.0816, 1, 1],
    [1.0777, 1, 1],
    [1.0740, 1, 1],
    [1.0705, 1, 1],
    [1.0673, 1, 1],
    [1.0642, 1, 1],
    [1.0611, 0, 1],
    [1.0692, 1, 1],
    [1.0663, 1, 1],
    [1.0634, 1, 1],
    [1.0605, 0, 1],
    [1.0681, 1, 1],
    [1.0653, 1, 1],
    [1.0626, 0, 1],
    [1.0697, 1, 1],
    [1.0671, 1, 1],
    [1.0645, 1, 1],
    [1.0620, 1, 1],
    [1.0595, 1, 1],
    [1.0572, 1, 1],
    [1.0550, 1, 1],
    [1.0528, 1, 1],
    [1.0506, 0, 1],
    [1.0565, 0, 1],
    [1.0627, 1, 1],
    [1.0604, 1, 1],
    [1.0583, 1, 1],
    [1.0562, 1, 1],
    [1.0542, 1, 1],
    [1.0522, 1, 1],
    [1.0502, 1, 1],
    [1.0484, 1, 1],
    [1.0467, 1, 1],
    [1.0450, 1, 1],
    [1.0432, 1, 1],
    [1.0415, 0, 1],
    [1.0461, 1, 1],
    [1.0444, 1, 1],
    [1.0428, 1, 1],
    [1.0411, 1, 1],
    [1.0395, 1, 1],
    [1.0380, 0, 1],
    [1.0424, 1, 1],
    [1.0408, 1, 1],
    [1.0392, 0, 1],
    [1.0436, 1, 1],
    [1.0420, 1, 1],
    [1.0404, 1, 1],
    [1.0390, 1, 1],
    [1.0376, 0, 1],
    [1.0416, 1, 1],
    [1.0401, 1, 1],
    [1.0387, 1, 1],
    [1.0374, 1, 1],
    [1.0361, 0, 1],
    [1.0398, 0, 1],
    [1.0438, 1, 1],
    [1.0424, 1, 1],
    [1.0410, 1, 1],
    [1.0396, 1, 1],
    [1.0383, 1, 1],
    [1.0371, 0, 1],
    [1.0406, 1, 1],
    [1.0393, 1, 1],
    [1.0381, 0, 1],
    [1.0417, 1, 1],
    [1.0403, 1, 1],
    [1.0391, 1, 1],
    [1.0379, 1, 1],
    [1.0367, 1, 1],
    [1.0356, 1, 1],
    [1.0344, 1, 1],
    [1.0332, 1, 1],
    [1.0321, 1, 1],
    [1.0309, 1, 1],
    [1.0297, 1, 1],
    [1.0287, 1, 1],
    [1.0277, 1, 1],
    [1.0267, 1, 1],
    [1.0256, 1, 1],
    [1.0246, 1, 1],
    [1.0236, 0, 1],
    [1.0263, 1, 1],
    [1.0253, 0, 1],
    [1.0281, 1, 1],
    [1.0271, 1, 1],
    [1.0262, 0, 1],
    [1.0289, 1, 1],
    [1.0280, 0, 1],
    [1.0308, 0, 1],
    [1.0337, 1, 1],
    [1.0326, 1, 1],
    [1.0316, 1, 1],
    [1.0305, 1, 1],
    [1.0295, 1, 1],
    [1.0286, 0, 1],
    [1.0313, 1, 1],
    [1.0303, 1, 1],
    [1.0293, 0, 1],
    [1.0321, 1, 1],
    [1.0311, 1, 1],
    [1.0300, 1, 1],
    [1.0291, 1, 1],
    [1.0282, 1, 1],
    [1.0274, 1, 1],
    [1.0265, 1, 1],
    [1.0256, 0, 1],
    [1.0281, 1, 1],
    [1.0272, 0, 1],
    [1.0297, 1, 1],
    [1.0288, 1, 1],
    [1.0280, 1, 1],
    [1.0271, 1, 1],
    [1.0263, 1, 1],
    [1.0255, 1, 1],
    [1.0246, 0, 1],
    [1.0268, 1, 1],
    [1.0260, 1, 1],
    [1.0252, 1, 1],
    [1.0244, 1, 1],
    [1.0235, 1, 1],
    [1.0227, 1, 1],
    [1.0219, 1, 1],
    [1.0211, 1, 1],
    [1.0202, 1, 1],
    [1.0194, 0, 1],
    [1.0217, 1, 1],
    [1.0209, 1, 1],
    [1.0200, 1, 1],
    [1.0193, 0, 1],
    [1.0215, 0, 1],
    [1.0236, 1, 1],
    [1.0229, 0, 1],
    [1.0249, 1, 1],
    [1.0242, 1, 1],
    [1.0234, 1, 1],
    [1.0227, 1, 1],
    [1.0219, 1, 1],
    [1.0211, 1, 1],
    [1.0203, 1, 1],
    [1.0195, 1, 1],
    [1.0189, 1, 1],
    [1.0182, 1, 1],
    [1.0175, 0, 1],
    [1.0194, 1, 1],
    [1.0187, 1, 1],
    [1.0181, 1, 1],
    [1.0174, 1, 1],
    [1.0167, 1, 1],
    [1.0161, 1, 1],
    [1.0154, 1, 1],
    [1.0148, 1, 1],
    [1.0141, 1, 1],
    [1.0135, 0, 1],
    [1.0152, 0, 1],
    [1.0171, 0, 1],
    [1.0189, 1, 1],
    [1.0182, 1, 1],
    [1.0176, 1, 1],
    [1.0170, 1, 1],
    [1.0163, 1, 1],
    [1.0157, 1, 1],
    [1.0151, 1, 1],
    [1.0145, 0, 1],
    [1.0161, 1, 1],
    [1.0155, 1, 1],
    [1.0149, 1, 1],
    [1.0143, 1, 1],
    [1.0136, 1, 1],
    [1.0130, 1, 1],
    [1.0124, 1, 1],
    [1.0118, 1, 1],
    [1.0111, 1, 1],
    [1.0105, 0, 1],
    [1.0122, 1, 1],
    [1.0116, 1, 1],
    [1.0110, 1, 1],
    [1.0103, 1, 1],
    [1.0097, 1, 1],
    [1.0091, 1, 1],
    [1.0086, 1, 1],
    [1.0081, 1, 1],
    [1.0075, 0, 1],
    [1.0090, 1, 1],
    [1.0085, 1, 1],
    [1.0080, 1, 1],
    [1.0074, 1, 1],
    [1.0069, 1, 1],
    [1.0064, 0, 1],
    [1.0079, 0, 1],
    [1.0093, 1, 1],
    [1.0088, 1, 1],
    [1.0083, 1, 1],
    [1.0078, 1, 1],
    [1.0073, 1, 1],
    [1.0067, 1, 1],
    [1.0062, 0, 1],
    [1.0077, 0, 1],
    [1.0091, 0, 1],
    [1.0107, 1, 1],
    [1.0101, 1, 1],
    [1.0095, 1, 1],
    [1.0090, 0, 1],
    [1.0105, 1, 1],
    [1.0099, 1, 1],
    [1.0094, 1, 1],
    [1.0089, 1, 1],
    [1.0084, 1, 1],
    [1.0079, 0, 1],
    [1.0093, 0, 1],
    [1.0108, 1, 1],
    [1.0102, 1, 1],
    [1.0097, 1, 1],
    [1.0092, 1, 1],
    [1.0087, 1, 1],
    [1.0082, 1, 1],
    [1.0077, 1, 1],
    [1.0073, 0, 1],
    [1.0086, 0, 1],
    [1.0100, 1, 1],
    [1.0095, 1, 1],
    [1.0090, 1, 1],
    [1.0085, 1, 1],
    [1.0080, 0, 1],
    [1.0094, 1, 1],
    [1.0089, 1, 1],
    [1.0084, 0, 1],
    [1.0097, 1, 1],
    [1.0093, 1, 1],
    [1.0088, 0, 1],
    [1.0101, 0, 1],
    [1.0117, 1, 1],
    [1.0111, 1, 1],
    [1.0106, 1, 1],
    [1.0100, 1, 1],
    [1.0095, 1, 1],
    [1.0091, 1, 1],
    [1.0086, 1, 1],
    [1.0082, 1, 1],
    [1.0077, 1, 1],
    [1.0073, 1, 1],
    [1.0068, 0, 1],
    [1.0081, 1, 1],
    [1.0076, 1, 1],
    [1.0072, 1, 1],
    [1.0067, 1, 1],
    [1.0063, 1, 1],
    [1.0059, 1, 1],
    [1.0054, 1, 1],
    [1.0050, 1, 1],
    [1.0046, 1, 1],
    [1.0041, 1, 1],
    [1.0037, 1, 1],
    [1.0033, 1, 1],
    [1.0028, 1, 1],
    [1.0024, 1, 1],
    [1.0019, 1, 1],
    [1.0014, 1, 1],
    [1.0009, 0, 1],
    [1.0022, 1, 1],
    [1.0018, 1, 1],
    [1.0013, 1, 1],
    [1.0008, 1, 1],
    [1.0003, 0, 1],
    [1.0016, 1, 1],
    [1.0012, 0, 1],
    [1.0024, 1, 1],
    [1.0020, 1, 1],
    [1.0015, 1, 1],
    [1.0011, 1, 1],
    [1.0006, 0, 1],
    [1.0019, 1, 1],
    [1.0014, 1, 1],
    [1.0009, 1, 1],
    [1.0005, 1, 1],
    [1.0000, 1, 1],
    [0.9996, 1, 1],
    [0.9992, 1, 1],
    [0.9988, 1, 1],
    [0.9984, 0, 1],
    [0.9995, 1, 1],
    [0.9991, 1, 1],
    [0.9987, 1, 1],
    [0.9984, 1, 1],
    [0.9980, 1, 1],
    [0.9976, 1, 1],
    [0.9972, 1, 1],
    [0.9969, 1, 1],
    [0.9965, 0, 1],
    [0.9975, 1, 1],
    [0.9972, 1, 1],
    [0.9968, 1, 1],
    [0.9965, 1, 1],
    [0.9961, 1, 1],
    [0.9957, 0, 1],
    [0.9968, 1, 1],
    [0.9964, 1, 1],
    [0.9961, 1, 1],
    [0.9957, 1, 1],
    [0.9953, 1, 1],
    [0.9950, 1, 1],
    [0.9946, 1, 1],
    [0.9943, 0, 1],
    [0.9952, 1, 1],
    [0.9949, 1, 1],
    [0.9945, 1, 1],
    [0.9942, 1, 1],
    [0.9938, 1, 1],
    [0.9935, 1, 1],
    [0.9931, 1, 1],
    [0.9927, 1, 1],
    [0.9923, 1, 1],
    [0.9920, 0, 1],
    [0.9930, 0, 1],
    [0.9939, 1, 1],
    [0.9936, 0, 1],
    [0.9945, 0, 1],
    [0.9954, 0, 1],
    [0.9964, 1, 1],
    [0.9961, 1, 1],
    [0.9957, 0, 1],
    [0.9967, 1, 1],
    [0.9964, 1, 1],
    [0.9960, 1, 1],
    [0.9957, 0, 1],
    [0.9966, 1, 1],
    [0.9963, 0, 1],
    [0.9973, 1, 1],
    [0.9969, 1, 1],
    [0.9966, 0, 1],
    [0.9975, 1, 1],
])

parms_default = {
    'max_tol':
        0,
    'max_gap':
        np.inf,
    'max_length':
        np.inf,
    'out':
        np.array([
            [1.3262, 1, 1],
            [0.8534, 1, 1],
            [0.4717, 0, 1],
            [1.3091, 1, 1],
            [1.0467, 2, 2],
            [0.8816, 1, 1],
            [0.7765, 0, 1],
            [1.0535, 0, 1],
            [1.6860, 1, 1],
            [1.3763, 1, 1],
            [1.2443, 1, 1],
            [1.1757, 1, 1],
            [1.1286, 1, 1],
            [1.0922, 1, 1],
            [1.0623, 1, 1],
            [1.0367, 1, 2],
            [1.1065, 1, 1],
            [1.0838, 1, 1],
            [1.0651, 1, 1],
            [1.0490, 1, 1],
            [1.0352, 0, 1],
            [1.0739, 1, 1],
            [1.0603, 0, 1],
            [1.0964, 1, 1],
            [1.0826, 1, 1],
            [1.0708, 1, 1],
            [1.0606, 1, 1],
            [1.0515, 1, 1],
            [1.0434, 0, 1],
            [1.0649, 1, 1],
            [1.0567, 1, 1],
            [1.0492, 1, 1],
            [1.0424, 3, 3],
            [1.0362, 1, 1],
            [1.0303, 2, 2],
            [1.0249, 2, 2],
            [1.0197, 1, 1],
            [1.0150, 0, 1],
            [1.0288, 2, 2],
            [1.0240, 1, 1],
            [1.0194, 2, 3],
            [1.0151, 2, 2],
            [1.0109, 0, 1],
            [1.0222, 1, 1],
            [1.0181, 2, 2],
            [1.0142, 1, 1],
            [1.0104, 1, 1],
            [1.0069, 1, 2],
            [1.0170, 1, 2],
            [1.0275, 0, 1],
            [1.0386, 0, 1],
            [1.0503, 1, 1],
            [1.0461, 2, 2],
            [1.0420, 1, 2],
            [1.0529, 1, 1],
            [1.0488, 0, 1],
            [1.0601, 1, 1],
            [1.0560, 0, 1],
            [1.0679, 1, 1],
            [1.0636, 1, 1],
            [1.0595, 2, 2],
            [1.0557, 1, 1],
            [1.0521, 0, 1],
            [1.0618, 0, 1],
            [1.0722, 0, 1],
            [1.0836, 1, 1],
            [1.0792, 1, 1],
            [1.0752, 1, 1],
            [1.0713, 0, 1],
            [1.0816, 1, 1],
            [1.0777, 1, 1],
            [1.0740, 1, 1],
            [1.0705, 1, 1],
            [1.0673, 1, 1],
            [1.0642, 1, 1],
            [1.0611, 0, 1],
            [1.0692, 1, 1],
            [1.0663, 1, 1],
            [1.0634, 1, 1],
            [1.0605, 0, 1],
            [1.0681, 1, 1],
            [1.0653, 1, 1],
            [1.0626, 0, 1],
            [1.0697, 1, 1],
            [1.0671, 1, 1],
            [1.0645, 1, 1],
            [1.0620, 1, 1],
            [1.0572, 1, 1],
            [1.0550, 1, 1],
            [1.0528, 1, 1],
            [1.0506, 0, 1],
            [1.0565, 0, 1],
            [1.0627, 1, 1],
            [1.0604, 1, 1],
            [1.0583, 1, 1],
            [1.0562, 1, 1],
            [1.0542, 1, 1],
            [1.0522, 1, 1],
            [1.0502, 1, 1],
            [1.0484, 1, 1],
            [1.0450, 1, 1],
            [1.0432, 1, 1],
            [1.0415, 0, 1],
            [1.0444, 1, 1],
            [1.0428, 1, 1],
            [1.0411, 1, 1],
            [1.0395, 1, 1],
            [1.0380, 0, 1],
            [1.0408, 1, 1],
            [1.0392, 0, 1],
            [1.0436, 1, 1],
            [1.0404, 1, 1],
            [1.0390, 1, 1],
            [1.0376, 0, 1],
            [1.0416, 1, 1],
            [1.0401, 1, 1],
            [1.0387, 1, 1],
            [1.0374, 1, 1],
            [1.0361, 0, 1],
            [1.0398, 0, 1],
            [1.0438, 1, 1],
            [1.0410, 1, 1],
            [1.0396, 1, 1],
            [1.0383, 1, 1],
            [1.0371, 0, 1],
            [1.0406, 1, 1],
            [1.0393, 1, 1],
            [1.0381, 0, 1],
            [1.0417, 1, 1],
            [1.0403, 1, 1],
            [1.0391, 1, 1],
            [1.0379, 1, 1],
            [1.0356, 1, 1],
            [1.0344, 1, 1],
            [1.0332, 1, 1],
            [1.0321, 2, 2],
            [1.0309, 1, 1],
            [1.0297, 2, 2],
            [1.0287, 1, 1],
            [1.0277, 1, 1],
            [1.0267, 1, 1],
            [1.0256, 1, 2],
            [1.0246, 1, 2],
            [1.0236, 1, 2],
            [1.0263, 2, 2],
            [1.0253, 0, 1],
            [1.0281, 2, 2],
            [1.0271, 2, 2],
            [1.0262, 0, 1],
            [1.0289, 1, 1],
            [1.0280, 1, 2],
            [1.0308, 0, 1],
            [1.0337, 1, 1],
            [1.0326, 1, 1],
            [1.0316, 1, 1],
            [1.0305, 1, 1],
            [1.0295, 1, 1],
            [1.0286, 0, 1],
            [1.0313, 1, 1],
            [1.0293, 0, 1],
            [1.0311, 1, 1],
            [1.0300, 1, 1],
            [1.0291, 1, 1],
            [1.0282, 1, 1],
            [1.0274, 1, 1],
            [1.0265, 1, 1],
            [1.0272, 0, 1],
            [1.0255, 1, 1],
            [1.0268, 1, 1],
            [1.0260, 1, 1],
            [1.0252, 1, 1],
            [1.0244, 1, 1],
            [1.0235, 1, 1],
            [1.0227, 2, 2],
            [1.0219, 2, 2],
            [1.0211, 2, 2],
            [1.0202, 1, 1],
            [1.0217, 1, 1],
            [1.0209, 1, 1],
            [1.0200, 1, 1],
            [1.0193, 0, 1],
            [1.0215, 0, 1],
            [1.0229, 0, 1],
            [1.0242, 1, 1],
            [1.0234, 1, 1],
            [1.0203, 1, 1],
            [1.0195, 1, 1],
            [1.0189, 2, 2],
            [1.0182, 2, 2],
            [1.0175, 0, 1],
            [1.0187, 1, 1],
            [1.0174, 1, 1],
            [1.0167, 1, 1],
            [1.0161, 2, 2],
            [1.0154, 1, 1],
            [1.0148, 1, 1],
            [1.0141, 1, 1],
            [1.0135, 0, 1],
            [1.0152, 0, 1],
            [1.0171, 0, 1],
            [1.0176, 1, 1],
            [1.0163, 1, 1],
            [1.0157, 1, 1],
            [1.0145, 0, 1],
            [1.0155, 1, 1],
            [1.0149, 1, 1],
            [1.0143, 1, 1],
            [1.0136, 1, 1],
            [1.0130, 1, 1],
            [1.0124, 1, 1],
            [1.0118, 1, 1],
            [1.0111, 2, 2],
            [1.0105, 1, 2],
            [1.0122, 1, 1],
            [1.0116, 1, 1],
            [1.0110, 1, 1],
            [1.0103, 1, 1],
            [1.0097, 3, 3],
            [1.0091, 2, 3],
            [1.0086, 2, 3],
            [1.0081, 2, 2],
            [1.0075, 0, 1],
            [1.0090, 2, 3],
            [1.0085, 2, 2],
            [1.0080, 1, 2],
            [1.0074, 1, 1],
            [1.0064, 0, 1],
            [1.0079, 0, 2],
            [1.0093, 2, 3],
            [1.0088, 1, 2],
            [1.0083, 1, 1],
            [1.0078, 1, 1],
            [1.0073, 2, 3],
            [1.0067, 2, 2],
            [1.0062, 0, 1],
            [1.0077, 2, 3],
            [1.0107, 1, 1],
            [1.0101, 1, 2],
            [1.0095, 3, 3],
            [1.0099, 1, 1],
            [1.0094, 2, 2],
            [1.0089, 2, 2],
            [1.0084, 1, 2],
            [1.0108, 1, 1],
            [1.0102, 1, 1],
            [1.0092, 1, 1],
            [1.0087, 1, 1],
            [1.0082, 2, 2],
            [1.0100, 2, 2],
            [1.0117, 1, 1],
            [1.0106, 1, 1],
            [1.0068, 0, 1],
            [1.0076, 1, 1],
            [1.0072, 1, 1],
            [1.0063, 1, 1],
            [1.0059, 1, 1],
            [1.0054, 1, 1],
            [1.0050, 1, 1],
            [1.0046, 1, 1],
            [1.0041, 1, 1],
            [1.0037, 1, 1],
            [1.0033, 1, 1],
            [1.0028, 1, 1],
            [1.0024, 2, 2],
            [1.0019, 2, 2],
            [1.0014, 2, 2],
            [1.0009, 1, 2],
            [1.0022, 1, 1],
            [1.0018, 1, 1],
            [1.0013, 1, 1],
            [1.0008, 1, 1],
            [1.0003, 0, 1],
            [1.0016, 1, 1],
            [1.0012, 0, 1],
            [1.0020, 1, 1],
            [1.0015, 1, 1],
            [1.0011, 1, 1],
            [1.0006, 0, 1],
            [1.0005, 1, 1],
            [1.0000, 1, 1],
            [0.9996, 1, 1],
            [0.9992, 1, 1],
            [0.9988, 1, 1],
            [0.9984, 1, 2],
            [0.9995, 1, 1],
            [0.9991, 1, 1],
            [0.9987, 1, 1],
            [0.9980, 1, 1],
            [0.9976, 1, 1],
            [0.9972, 2, 2],
            [0.9969, 2, 2],
            [0.9965, 1, 2],
            [0.9975, 2, 2],
            [0.9968, 2, 2],
            [0.9961, 3, 3],
            [0.9957, 1, 4],
            [0.9964, 3, 3],
            [0.9953, 1, 1],
            [0.9950, 1, 1],
            [0.9946, 1, 1],
            [0.9943, 0, 1],
            [0.9952, 1, 1],
            [0.9949, 1, 1],
            [0.9945, 1, 2],
            [0.9942, 1, 1],
            [0.9938, 1, 1],
            [0.9935, 1, 1],
            [0.9931, 1, 1],
            [0.9927, 1, 1],
            [0.9923, 1, 1],
            [0.9920, 0, 1],
            [0.9930, 0, 1],
            [0.9939, 1, 1],
            [0.9936, 0, 1],
            [0.9954, 0, 1],
            [0.9967, 1, 1],
            [0.9960, 1, 1],
            [0.9966, 1, 2],
            [0.9963, 0, 1],
            [0.9973, 1, 1],
        ]),
}

parms_max_tol = {
    'max_tol':
        0.01,
    'max_gap':
        np.inf,
    'max_length':
        np.inf,
    'out':
        np.array([
            [1.3262, 1, 1],
            [0.8534, 1, 1],
            [0.4717, 0, 1],
            [1.3091, 1, 1],
            [1.0447, 45, 61],
            [0.8816, 1, 1],
            [0.7765, 0, 1],
            [1.6860, 1, 1],
            [1.3763, 1, 1],
            [1.2443, 1, 1],
            [1.1757, 1, 1],
            [1.1286, 1, 1],
            [1.0877, 5, 5],
            [1.0640, 27, 34],
            [1.0306, 34, 43],
            [1.1065, 1, 1],
            [1.0769, 6, 6],
            [1.0208, 52, 66],
            [1.0081, 89, 111],
            [0.9966, 46, 62],
        ]),
}

parms_max_length = {
    'max_tol':
        0.01,
    'max_gap':
        np.inf,
    'max_length':
        25,
    'out':
        np.array([
            [1.3262, 1, 1],
            [0.8534, 1, 1],
            [0.4717, 0, 1],
            [1.3091, 1, 1],
            [1.0488, 3, 5],
            [0.8816, 1, 1],
            [0.7765, 0, 1],
            [1.6860, 1, 1],
            [1.3763, 1, 1],
            [1.2443, 1, 1],
            [1.1757, 1, 1],
            [1.1286, 1, 1],
            [1.0888, 4, 4],
            [1.0630, 6, 7],
            [1.0349, 4, 6],
            [1.1065, 1, 1],
            [1.0739, 1, 1],
            [1.0482, 4, 6],
            [1.0203, 7, 10],
            [1.0106, 2, 4],
            [1.0386, 0, 1],
            [1.0623, 11, 16],
            [1.0716, 10, 13],
            [1.0836, 1, 1],
            [1.0573, 11, 12],
            [1.0446, 13, 15],
            [1.0394, 14, 21],
            [1.0368, 9, 9],
            [1.0286, 18, 25],
            [1.0271, 20, 23],
            [1.0209, 20, 25],
            [1.0154, 21, 25],
            [1.0087, 20, 25],
            [1.0092, 18, 25],
            [1.0087, 20, 25],
            [1.0024, 21, 25],
            [0.9981, 22, 25],
            [0.9945, 18, 25],
            [0.9966, 6, 9],
        ]),
}

parms_max_gap = {
    'max_tol':
        0.01,
    'max_gap':
        0,
    'max_length':
        np.inf,
    'out':
        np.array([
            [1.3262, 1, 1],
            [0.8534, 1, 1],
            [0.4717, 0, 1],
            [1.3091, 1, 1],
            [1.0467, 1, 1],
            [0.8816, 1, 1],
            [0.7765, 0, 1],
            [1.0535, 0, 1],
            [1.6860, 1, 1],
            [1.3763, 1, 1],
            [1.2443, 1, 1],
            [1.1757, 1, 1],
            [1.1286, 1, 1],
            [1.0922, 1, 1],
            [1.0623, 1, 1],
            [1.0367, 0, 1],
            [1.1065, 1, 1],
            [1.0838, 1, 1],
            [1.0651, 1, 1],
            [1.0490, 1, 1],
            [1.0352, 0, 1],
            [1.0739, 1, 1],
            [1.0603, 0, 1],
            [1.0964, 1, 1],
            [1.0826, 1, 1],
            [1.0708, 1, 1],
            [1.0560, 2, 2],
            [1.0434, 0, 1],
            [1.0608, 2, 2],
            [1.0458, 2, 2],
            [1.0333, 2, 2],
            [1.0210, 6, 7],
            [1.0109, 0, 1],
            [1.0182, 3, 3],
            [1.0114, 1, 3],
            [1.0275, 0, 1],
            [1.0386, 0, 1],
            [1.0509, 4, 7],
            [1.0637, 3, 3],
            [1.0565, 1, 3],
            [1.0722, 0, 1],
            [1.0793, 3, 3],
            [1.0713, 0, 1],
            [1.0778, 3, 3],
            [1.0660, 6, 7],
            [1.0598, 16, 20],
            [1.0449, 9, 10],
            [1.0386, 29, 36],
            [1.0259, 52, 66],
            [1.0146, 33, 39],
            [1.0061, 82, 103],
            [0.9956, 35, 47],
        ]),
}
